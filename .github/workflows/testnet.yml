on:
  push:
    branches:
      - testnet

name: Deploy to Amazon EKS

jobs:
  build_and_push_image:
    name: Build and Push image to ECR
    runs-on: ubuntu-latest
    outputs:
      github_sha: ${{ steps.build-image.outputs.github_sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to EKS.
          # docker --version
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}

  deploy_testnet_bitcore-node:
    name: Deploy testnet bitcore-node to EKS
    needs: build_and_push_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: deploy core
        uses: kodermax/kubectl-aws-eks@1.0.7
        env:
          KUBE_CONFIG_DATA: ${{ secrets.AWS_TESTNET_KUBECONFIG }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        with:
          args: set image -n main --record deployment/explorer-core-deployment explorer-core=$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
  
      - name: verify core deployment
        uses: kodermax/kubectl-aws-eks@1.0.7
        env:
          KUBE_CONFIG_DATA: ${{ secrets.AWS_TESTNET_KUBECONFIG }}
        with:
          args: rollout status -n main deployment/explorer-core-deployment

  deploy_testnet_insight:
    name: Deploy testnet insight to EKS
    needs: build_and_push_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: deploy insight
        uses: kodermax/kubectl-aws-eks@1.0.7
        env:
          KUBE_CONFIG_DATA: ${{ secrets.AWS_TESTNET_KUBECONFIG }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        with:
          args: set image -n main --record deployment/explorer-insight-deployment explorer-insight=$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
  
      - name: verify insight deployment
        uses: kodermax/kubectl-aws-eks@1.0.7
        env:
          KUBE_CONFIG_DATA: ${{ secrets.AWS_TESTNET_KUBECONFIG }}
        with:
          args: rollout status -n main deployment/explorer-insight-deployment
